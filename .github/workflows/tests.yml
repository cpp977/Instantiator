name: Builds

on:
  push:
      

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        clang_version: [14]
    steps:
    - uses: actions/checkout@v3
          
    - run: clang++-${{ matrix.clang_version }} --version

    - run: cmake --version

    - run: sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
    - run: sudo apt-get update
    - run: sudo apt-get install llvm-${{ matrix.clang_version }}
    - run: sudo apt-get install llvm-${{ matrix.clang_version }}-dev
    - run: sudo apt-get install llvm-${{ matrix.clang_version }}-runtime
    - run: sudo apt-get install libclang-${{ matrix.clang_version }}-dev
    - run: sudo apt-get install libclang-cpp${{ matrix.clang_version }}
    - run: sudo apt-get install libclang-cpp${{ matrix.clang_version }}-dev

    - name: Setup BATS
      uses: mig4/setup-bats@v1
      with:
        bats-version: 1.10.0

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build
      
    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      env:
        CXX: clang++-${{ matrix.clang_version }}
        CXX_FLAGS: /usr/lib/llvm-${{ matrix.clang_version }}/lib/clang/${{ matrix.clang_version }}.0.0/include
      run: cmake $GITHUB_WORKSPACE -DLLVM_ROOT=/usr/lib/llvm-${{ matrix.clang_version }}/cmake -DClang_DIR=/usr/lib/llvm-${{ matrix.clang_version }}/lib/cmake/clang

    - name: Build Instantiator
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . -- -j2

    - name: Install Instantiator
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: sudo cmake --build . --target install -- -j2
      
    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: bats -r .
